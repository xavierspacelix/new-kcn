import type { AppProps } from 'next/app';
import { ReactElement, ReactNode } from 'react';
import { Provider } from 'react-redux';
import store from '../store/index';
import Head from 'next/head';
import { appWithI18Next } from 'ni18n';
import 'react-perfect-scrollbar/dist/css/styles.css';
import '../styles/tailwind.css';
import '../styles/customdatepicker.css';
import '../styles/syncfusion.css';
import { NextPage } from 'next';
import { SessionProvider } from './api/sessionContext';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import DefaultLayout from '@/components/Layouts/DefaultLayout';
import { ni18nConfig } from '../ni18n.config.ts';
import { ProgressProvider } from '@/context/ProgressContext';

export type NextPageWithLayout<P = {}, IP = P> = NextPage<P, IP> & {
    getLayout?: (page: ReactElement) => ReactNode;
};

type AppPropsWithLayout = AppProps & {
    Component: NextPageWithLayout;
};

const App = ({ Component, pageProps }: AppPropsWithLayout) => {
    const getLayout = Component.getLayout ?? ((page) => <DefaultLayout>{page}</DefaultLayout>);
    const queryClient = new QueryClient();
    return (
        <SessionProvider>
            <Provider store={store}>
                <ProgressProvider>
                    <QueryClientProvider client={queryClient}>
                        <Head>
                            <title>Next KCN System</title>
                            <meta charSet="UTF-8" />
                            <meta httpEquiv="X-UA-Compatible" content="IE=edge" />
                            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
                            <meta name="description" content="Generated by create next app" />
                            <link rel="icon" href="/logo.png" />
                        </Head>
                        {getLayout(<Component {...pageProps} />)}
                    </QueryClientProvider>
                </ProgressProvider>
            </Provider>
        </SessionProvider>
    );
};
export default appWithI18Next(App, ni18nConfig);
